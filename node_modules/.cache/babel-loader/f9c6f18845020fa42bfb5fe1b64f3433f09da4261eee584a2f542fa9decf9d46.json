{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/my-app/src/Components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  let [text, setText] = useState('Enter text here');\n  text = 'dnejfr';\n  const [words, countWords] = useState(0);\n  const [char, countChar] = useState(0);\n  const handleUpOnchng = event => {\n    setText(event.target.value);\n  };\n  const handleUpOnclk = () => {\n    if (text.match(/[a-z]/)) {\n      let newText = text.toUpperCase();\n      setText(newText);\n    } else {\n      let newText = text.toLowerCase();\n      setText(newText);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        onChange: handleUpOnchng,\n        id: \"textArea\",\n        value: text,\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleUpOnclk,\n      children: \"Toggle Case\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [words, \" words and \", char, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"N1C1I03e2JBATtxijxBn93ze6iE=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","text","setText","words","countWords","char","countChar","handleUpOnchng","event","target","value","handleUpOnclk","match","newText","toUpperCase","toLowerCase","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/my-app/src/Components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\n\nexport default function TextForm(props) {\n    let [text,setText] = useState('Enter text here');\n    text='dnejfr';\n    const [words,countWords] = useState(0);\n    const [char,countChar] = useState(0);\n    const handleUpOnchng = (event)=>{\n        setText(event.target.value);\n    }\n    const handleUpOnclk = ()=>{\n        if(text.match(/[a-z]/)){\n            let newText = text.toUpperCase();\n            setText(newText);\n        }\n        else{\n            let newText = text.toLowerCase();\n            setText(newText);\n        }\n        \n    }\n  return (\n    <>\n        <div className=\"mb-3\">\n            <h1>{props.heading}</h1>\n            <textarea className=\"form-control\" onChange={handleUpOnchng} id=\"textArea\" value={text}rows=\"8\"></textarea>\n        </div>\n        <button className=\"btn btn-primary\" onClick={handleUpOnclk}>Toggle Case</button>\n\n        <div className=\"container\">\n            <h2>Text Summary</h2>\n            <p>{words} words and {char} characters</p>\n        </div>\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,IAAI,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGT,QAAQ,CAAC,iBAAiB,CAAC;EAChDQ,IAAI,GAAC,QAAQ;EACb,MAAM,CAACE,KAAK,EAACC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACtC,MAAM,CAACY,IAAI,EAACC,SAAS,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAMc,cAAc,GAAIC,KAAK,IAAG;IAC5BN,OAAO,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACD,MAAMC,aAAa,GAAGA,CAAA,KAAI;IACtB,IAAGV,IAAI,CAACW,KAAK,CAAC,OAAO,CAAC,EAAC;MACnB,IAAIC,OAAO,GAAGZ,IAAI,CAACa,WAAW,CAAC,CAAC;MAChCZ,OAAO,CAACW,OAAO,CAAC;IACpB,CAAC,MACG;MACA,IAAIA,OAAO,GAAGZ,IAAI,CAACc,WAAW,CAAC,CAAC;MAChCb,OAAO,CAACW,OAAO,CAAC;IACpB;EAEJ,CAAC;EACH,oBACElB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACIrB,OAAA;MAAKsB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBrB,OAAA;QAAAqB,QAAA,EAAKjB,KAAK,CAACmB;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxB3B,OAAA;QAAUsB,SAAS,EAAC,cAAc;QAACM,QAAQ,EAAEhB,cAAe;QAACiB,EAAE,EAAC,UAAU;QAACd,KAAK,EAAET,IAAK;QAAAwB,IAAI,EAAC;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1G,CAAC,eACN3B,OAAA;MAAQsB,SAAS,EAAC,iBAAiB;MAACS,OAAO,EAAEf,aAAc;MAAAK,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEhF3B,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBrB,OAAA;QAAAqB,QAAA,EAAI;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB3B,OAAA;QAAAqB,QAAA,GAAIb,KAAK,EAAC,aAAW,EAACE,IAAI,EAAC,aAAW;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA,eACR,CAAC;AAEP;AAACtB,EAAA,CAjCuBF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}