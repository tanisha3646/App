{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n// import About from './Components/About';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark mode has been enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter Text to analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alert","Navbar","TextForm","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","msg","type","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/my-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n// import About from './Components/About';\nimport { useState } from 'react';\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert= (msg, type)=>{\n    setAlert({\n      msg: msg,\n      type: type\n    })\n  }\n\n  const toggleMode = ()=>{\n      if(mode ==='light'){\n        setMode('dark');\n        document.body.style.backgroundColor = '#042743';\n        showAlert('Dark mode has been enabled', 'success');\n      }\n      else{\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert('Light mode has been enabled', 'success')\n      }\n  }\n  return (\n    <>\n    {/* <Navbar title = 'TextUtils' about = 'About TextUtils'/> */}\n    <Navbar title = 'TextUtils' mode = {mode} toggleMode = {toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      <TextForm heading = 'Enter Text to analyze' mode = {mode}/>\n      {/* <About/> */}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,SAAS,GAAEA,CAACC,GAAG,EAAEC,IAAI,KAAG;IAC5BH,QAAQ,CAAC;MACPE,GAAG,EAAEA,GAAG;MACRC,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAI;IACnB,IAAGP,IAAI,KAAI,OAAO,EAAC;MACjBC,OAAO,CAAC,MAAM,CAAC;MACfO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CP,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACpD,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CP,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACrD;EACJ,CAAC;EACD,oBACET,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBAEAjB,OAAA,CAACJ,MAAM;MAACsB,KAAK,EAAG,WAAW;MAACb,IAAI,EAAIA,IAAK;MAACO,UAAU,EAAIA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrEtB,OAAA,CAACL,KAAK;MAACY,KAAK,EAAEA;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtBtB,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC7BjB,OAAA,CAACH,QAAQ;QAAC2B,OAAO,EAAG,uBAAuB;QAACnB,IAAI,EAAIA;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExD,CAAC;EAAA,eACJ,CAAC;AAEP;AAAClB,EAAA,CAlCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}